// first 4'b 1110 = always 
1: B -- Branch (1110:AL) offset = 4
1110 101 0 000000000000000000000100
2. BL -- Branch with link offset = 4
1110 101 1 000000000000000000000100
3. MOV -- Move Register or Constant, move register 0 to register 1. 
1110 00 0 1101 0 1110 0001 00000 00 0 0000
4. MVN -- Move negative reg
1110 00 0 1111 0 0011 0100 01000 00 0 0011
5. LDR -- Load reg from memory (add immediate offset after transfer, down bit, byte quantity, no write-back)
1110 01 0 0 0 1 0 1 0101 0110 000000000011
6. ADD -- operand 2 is a reg, don't alter condition codes, shift left 32, Rm = 0111
1110 00 0 0100 0 0110 1000 10000 00 0111
7. Sub -- subtract reg 0111 by reg 1000 and store to 1001, shift left 10000 
1110 00 0 0010 0 0111 1001 10000 00 1000

1. B
11101010000000000000000000100000

2. BL
11101011000000000000000000000000

3. MOV
1110 00 0 1101 1 1111 0011 00000000 1000

4. MVN
1110 00 0 1111 1 1111 0011 00000000 1000

5. LDR
1110 01 0 0 1 1 0 1 0000 0001 000000000000

6. ADD
1110 00 0 0100 0 0000 0010 00000000 0001

7. SUB
1110 00 1 0010 0 1110 0001 00000000 0000

8. CMP
1110 000 1010 1 1111 0011 00000000 1000

9. TST - fixed
1110 000 1000 1 1111 0011 00000000 1000

10. TEQ - fixed
1110 000 1001 1 1111 0011 00000000 1000

11. EOR - fixed
1110 000 0001 0 1111 0011 00000000 1000


12. BIC
1110 000 1110 1 1111 0011 00000000 1000

13. ORR - fixed
1110 000 1100 0 1111 0011 00000000 1000

